<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:local="clr-namespace:Extensions"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Extensions;component/Themes/Skin.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <ObjectDataProvider x:Key="ColorList"
        MethodName="GetProperties"
        ObjectInstance="{x:Type Colors}" />
    <DataTemplate x:Key="ColorItemTemplate">
        <Rectangle Width="16" Height="16"
            Fill="{Binding Name}" />
    </DataTemplate>
    <local:SystemFileIconConverter x:Key="SystemFileIconConverter" />
    <local:NullableToBooleanConverter x:Key="NullableToBooleanConverter" />
    <local:FilePathToIconConverter x:Key="FilePathToIconConverter" />
    <local:VisibilityToBooleanConverter x:Key="VisibilityToBooleanConverter" />
    <Style x:Key="NumericUpDownTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Text" Value="{Binding Value, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ShowMode, RelativeSource={RelativeSource TemplatedParent}}" Value="CurrencyMode">
                <Setter Property="Text" Value="{Binding Value, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, StringFormat=\{0:C\}, UpdateSourceTrigger=PropertyChanged}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ShowMode, RelativeSource={RelativeSource TemplatedParent}}" Value="DateTimeMode">
                <Setter Property="Text" Value="{Binding DateValue, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="local:GraphControl">
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Mode=Self}}"
                    IsEnabled="{Binding IsContextMenuEnabled}"
                    Visibility="{Binding ContextMenuVisibility}">
                    <MenuItem Header="Seri Rakamlarını Göster" IsCheckable="True"
                        IsChecked="{Binding SeriesTextVisibility, Converter={StaticResource VisibilityToBooleanConverter}}" />
                    <MenuItem Header="Değer Rakamlarını Göster" IsCheckable="True"
                        IsChecked="{Binding ValueTextVisibility, Converter={StaticResource VisibilityToBooleanConverter}}" />
                    <MenuItem IsCheckable="True" IsChecked="{Binding LineGraphVisibility, Converter={StaticResource VisibilityToBooleanConverter}}">
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock VerticalAlignment="Center" Text="Çizgi Grafik Göster" />
                                <local:NumericUpDownControl IsEnabled="{Binding LineGraphVisibility, Converter={StaticResource VisibilityToBooleanConverter}}"
                                    IsReadOnly="True" LargeChange="1" Maximum="30"
                                    Minimum="1" Orientation="Horizontal" SmallChange="1"
                                    Value="{Binding LineThickness}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem Header="Çizgi Grafik Tepe Noktaları Göster" IsCheckable="True"
                        IsChecked="{Binding LineDotVisibility, Converter={StaticResource VisibilityToBooleanConverter}}" />
                    <MenuItem Header="Grafik İçerik Göster" IsCheckable="True"
                        IsChecked="{Binding GraphContentVisibility, Converter={StaticResource VisibilityToBooleanConverter}}" />
                    <MenuItem Command="{Binding Kaydet}" Header="Resim Olarak Kaydet">
                        <MenuItem.Icon>
                            <Image Width="16" Height="16">
                                <Image.Source>
                                    <MultiBinding Converter="{StaticResource SystemFileIconConverter}">
                                        <Binding Source="Shell32.dll" />
                                        <Binding Source="6" />
                                    </MultiBinding>
                                </Image.Source>
                            </Image>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="local:ColorPicker">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ColorPicker">
                    <Grid IsEnabled="{TemplateBinding IsEnabled}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{Binding SelectorLength, RelativeSource={RelativeSource TemplatedParent}}" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="5*" />
                            <RowDefinition Height="2*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Rectangle Name="RgbGrid"
                            Grid.Row="0" Grid.Column="0">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0.0,0" EndPoint="1,0">
                                    <GradientStop Color="Black" />
                                    <GradientStop Offset="1" Color="White" />
                                    <GradientStop Offset="0.5" Color="{Binding MiddleStopColor, RelativeSource={RelativeSource TemplatedParent}}" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle Name="SpectrumGrid"
                            Grid.Row="1" Grid.Column="0"
                            Fill="{Binding SpectrumGridBackground, RelativeSource={RelativeSource TemplatedParent}}"
                            Opacity="1" />
                        <TextBox Grid.Row="2" Grid.Column="0"
                            IsReadOnly="True"
                            Text="{Binding HexCode, RelativeSource={RelativeSource TemplatedParent}}"
                            TextBlock.Foreground="{Binding HexCode, RelativeSource={RelativeSource TemplatedParent}}"
                            Visibility="{Binding HexCodeVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ListBox Grid.RowSpan="3" Grid.Column="1"
                            ItemTemplate="{StaticResource ColorItemTemplate}"
                            ItemsSource="{Binding Mode=OneWay, Source={StaticResource ColorList}}"
                            SelectedValue="{Binding HexCode, RelativeSource={RelativeSource TemplatedParent}}"
                            SelectedValuePath="Name"
                            Visibility="{Binding PredefinedColorVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Columns="{Binding ColorPickerColumnCount, RelativeSource={RelativeSource AncestorType=local:ColorPicker}}" />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="Padding" Value="0" />
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.56" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="local:ImageViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ImageViewer">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                            <Image RenderTransformOrigin="0.5,0.5" ScrollViewer.CanContentScroll="True"
                                Source="{Binding Source, RelativeSource={RelativeSource TemplatedParent}}"
                                Stretch="None">
                                <Image.LayoutTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="{Binding Zoom, RelativeSource={RelativeSource TemplatedParent}}" ScaleY="{Binding Zoom, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <RotateTransform Angle="{Binding Angle, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </TransformGroup>
                                </Image.LayoutTransform>
                            </Image>
                        </ScrollViewer>
                        <Viewport3D x:Name="PanoramaViewPort"
                            Cursor="ScrollAll" Visibility="Collapsed">
                            <Viewport3D.Camera>
                                <PerspectiveCamera FieldOfView="{Binding Fov, RelativeSource={RelativeSource TemplatedParent}}"
                                    LookDirection="0,0,1" Position="0,0,0" UpDirection="0,1,0" />
                            </Viewport3D.Camera>
                            <ModelVisual3D>
                                <ModelVisual3D.Content>
                                    <Model3DGroup>
                                        <DirectionalLight Direction="0,0,1" Color="White" />
                                    </Model3DGroup>
                                </ModelVisual3D.Content>
                            </ModelVisual3D>
                            <ModelVisual3D>
                                <ModelVisual3D.Content>
                                    <GeometryModel3D Geometry="{Binding SphereModel, RelativeSource={RelativeSource TemplatedParent}}">
                                        <GeometryModel3D.BackMaterial>
                                            <DiffuseMaterial x:Name="panoramaBrush" />
                                        </GeometryModel3D.BackMaterial>
                                    </GeometryModel3D>
                                </ModelVisual3D.Content>
                                <ModelVisual3D.Transform>
                                    <Transform3DGroup>
                                        <ScaleTransform3D ScaleX="1" ScaleY="1.5" ScaleZ="1" />
                                        <RotateTransform3D>
                                            <RotateTransform3D.Rotation>
                                                <AxisAngleRotation3D Angle="{Binding RotateX, RelativeSource={RelativeSource TemplatedParent}}" Axis="0,1,0" />
                                            </RotateTransform3D.Rotation>
                                        </RotateTransform3D>
                                        <RotateTransform3D>
                                            <RotateTransform3D.Rotation>
                                                <AxisAngleRotation3D Angle="{Binding RotateY, RelativeSource={RelativeSource TemplatedParent}}" Axis="1,0,0" />
                                            </RotateTransform3D.Rotation>
                                        </RotateTransform3D>
                                    </Transform3DGroup>
                                </ModelVisual3D.Transform>
                            </ModelVisual3D>
                        </Viewport3D>
                        <ContentControl x:Name="Cnt" Grid.Row="1">
                            <Grid IsEnabled="{Binding ToolBarIsEnabled, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding ToolBarVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Button Command="{Binding DosyaAç, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding OpenButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                                    <Button.Content>
                                        <Image Width="16" Height="16">
                                            <Image.Source>
                                                <MultiBinding Converter="{StaticResource SystemFileIconConverter}">
                                                    <Binding Source="Shell32.dll" />
                                                    <Binding Source="3" />
                                                </MultiBinding>
                                            </Image.Source>
                                        </Image>
                                    </Button.Content>
                                </Button>
                                <Button Grid.Column="1" Command="{Binding Resize, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <Button.Content>
                                        <Image Width="16" Height="16">
                                            <Image.Source>
                                                <MultiBinding Converter="{StaticResource SystemFileIconConverter}">
                                                    <Binding Source="Shell32.dll" />
                                                    <Binding Source="159" />
                                                </MultiBinding>
                                            </Image.Source>
                                        </Image>
                                    </Button.Content>
                                </Button>
                                <StackPanel Grid.Column="2"
                                    Orientation="Horizontal"
                                    Visibility="{Binding TifNavigasyonButtonEtkin, RelativeSource={RelativeSource TemplatedParent}}">
                                    <RepeatButton Command="{Binding ViewerBack, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="Önceki Sayfa">
                                        <Image Width="16" Height="16">
                                            <Image.Source>
                                                <MultiBinding Converter="{StaticResource SystemFileIconConverter}">
                                                    <Binding Source="Shell32.dll" />
                                                    <Binding Source="246" />
                                                </MultiBinding>
                                            </Image.Source>
                                        </Image>
                                    </RepeatButton>
                                    <ComboBox ItemsSource="{Binding Pages, RelativeSource={RelativeSource TemplatedParent}}" SelectedItem="{Binding Sayfa, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <ComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel />
                                            </ItemsPanelTemplate>
                                        </ComboBox.ItemsPanel>
                                    </ComboBox>
                                    <RepeatButton Command="{Binding ViewerNext, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="Sonraki Sayfa">
                                        <Image Width="16" Height="16">
                                            <Image.Source>
                                                <MultiBinding Converter="{StaticResource SystemFileIconConverter}">
                                                    <Binding Source="Shell32.dll" />
                                                    <Binding Source="247" />
                                                </MultiBinding>
                                            </Image.Source>
                                        </Image>
                                    </RepeatButton>
                                </StackPanel>
                                <Button Grid.Column="3"
                                    Command="{Binding Yazdır, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    Visibility="{Binding PrintButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                                    <Button.Content>
                                        <Image Width="16" Height="16">
                                            <Image.Source>
                                                <MultiBinding Converter="{StaticResource SystemFileIconConverter}">
                                                    <Binding Source="Shell32.dll" />
                                                    <Binding Source="16" />
                                                </MultiBinding>
                                            </Image.Source>
                                        </Image>
                                    </Button.Content>
                                </Button>
                                <Slider Grid.Column="4"
                                    Margin="2"
                                    AutoToolTipPlacement="TopLeft"
                                    IsEnabled="{Binding Source, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullableToBooleanConverter}}"
                                    Minimum="0.01" SmallChange="1"
                                    Style="{StaticResource Slider}"
                                    Value="{Binding Zoom, RelativeSource={RelativeSource TemplatedParent}}" />
                                <Slider Grid.Column="5"
                                    Margin="2"
                                    AutoToolTipPlacement="TopLeft"
                                    IsEnabled="{Binding Source, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullableToBooleanConverter}}"
                                    IsSnapToTickEnabled="{Binding SnapTick, RelativeSource={RelativeSource TemplatedParent}}"
                                    Maximum="360" SmallChange="1"
                                    Style="{StaticResource Slider}"
                                    Ticks="0, 90, 180, 270, 360"
                                    Value="{Binding Angle, RelativeSource={RelativeSource TemplatedParent}}" />
                                <Button Grid.Column="6"
                                    Command="{Binding OrijinalDosyaAç, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    CommandParameter="{Binding ImageFilePath, RelativeSource={RelativeSource TemplatedParent}}"
                                    Visibility="{Binding OrijinalResimDosyaAçButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                                    <Button.Content>
                                        <Image Width="16" Height="16"
                                            Source="{Binding ImageFilePath, Converter={StaticResource FilePathToIconConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Button.Content>
                                </Button>
                                <ToggleButton Grid.Column="7"
                                    Content="360°"
                                    IsChecked="{Binding PanoramaMode, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>
                        </ContentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="ToolBarVisibility" Value="Collapsed">
                            <Setter TargetName="Cnt" Property="Content" Value="{x:Null}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="local:MaskedTextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ScrollViewer x:Name="PART_ContentHost"
                                Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                            <Border Grid.Column="1"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Visibility="{Binding ClearButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                                <TextBlock FontWeight="Bold">
                                    <Hyperlink Command="{Binding Reset, RelativeSource={RelativeSource TemplatedParent}}">
                                        <Run Text="X" />
                                    </Hyperlink>
                                </TextBlock>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF7EB4EA" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF569DE5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="local:SplitButton">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:SplitButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="14" />
                        </Grid.ColumnDefinitions>
                        <Button x:Name="btn"
                            Grid.Column="0"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Command="{TemplateBinding Command}"
                            CommandParameter="{TemplateBinding CommandParameter}"
                            Content="{TemplateBinding Content}"
                            IsTabStop="{TemplateBinding IsTabStop}" />
                        <ToggleButton x:Name="Tb"
                            Grid.Column="1"
                            IsChecked="{TemplateBinding IsSplitPartOpen}"
                            IsEnabled="{TemplateBinding SplitContentPartIsEnabled}"
                            IsTabStop="{TemplateBinding IsTabStop}">
                            <Path x:Name="path"
                                HorizontalAlignment="Center" VerticalAlignment="Center"
                                Data="{StaticResource ArrowGeometry}"
                                Focusable="False">
                                <Path.Style>
                                    <Style TargetType="Path">
                                        <Setter Property="Fill" Value="Black" />
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Fill" Value="#FF838383" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Path.Style>
                            </Path>
                        </ToggleButton>
                        <Popup x:Name="PART_Popup"
                            Grid.ColumnSpan="2"
                            AllowsTransparency="True" Focusable="False"
                            IsOpen="{TemplateBinding IsSplitPartOpen}"
                            Placement="{TemplateBinding PlacementMode}"
                            PopupAnimation="Slide"
                            StaysOpen="{TemplateBinding StayOpen}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding InternalContent}" />
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Tb" Property="IsChecked" Value="True">
                            <Setter TargetName="PART_Popup" Property="IsOpen" Value="true" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="#838383" />
                            <Setter TargetName="btn" Property="Background" Value="#F4F4F4" />
                            <Setter TargetName="btn" Property="BorderBrush" Value="#ADB2B5" />
                        </Trigger>
                        <Trigger SourceName="PART_Popup" Property="IsOpen" Value="true">
                            <Setter Property="IsEnabled" Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    <Style TargetType="local:ButtonedTextBox">
        <Setter Property="Border.BorderBrush" Value="#ABADB3" />
        <Setter Property="Border.BorderThickness" Value="1" />
        <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border Name="border"
                            Background="{TemplateBinding Panel.Background}"
                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                            BorderThickness="{TemplateBinding Border.BorderThickness}"
                            SnapsToDevicePixels="True">
                            <ScrollViewer Name="PART_ContentHost"
                                Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                        </Border>
                        <Border Name="copyborder"
                            Grid.Column="1"
                            Width="16"
                            Background="{TemplateBinding Panel.Background}"
                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                            BorderThickness="0,1,1,1" SnapsToDevicePixels="True"
                            Visibility="{Binding CopyButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Hyperlink Command="{Binding Copy, RelativeSource={RelativeSource TemplatedParent}}" TextDecorations="None">
                                    <Run FontFamily="Wingdings 2" FontWeight="Bold" Text="1" />
                                </Hyperlink>
                            </TextBlock>
                        </Border>
                        <Border Name="clearborder"
                            Grid.Column="2"
                            Width="16"
                            Background="{TemplateBinding Panel.Background}"
                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                            BorderThickness="0,1,1,1" SnapsToDevicePixels="True"
                            Visibility="{Binding ResetButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Hyperlink Command="{Binding Reset, RelativeSource={RelativeSource TemplatedParent}}" TextDecorations="None">
                                    <Run FontWeight="Bold" Text="X" />
                                </Hyperlink>
                            </TextBlock>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.56" />
                            <Setter TargetName="clearborder" Property="UIElement.Opacity" Value="0.56" />
                            <Setter TargetName="copyborder" Property="UIElement.Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Border.BorderBrush" Value="#7EB4EA" />
                            <Setter TargetName="clearborder" Property="Border.BorderBrush" Value="#7EB4EA" />
                            <Setter TargetName="copyborder" Property="Border.BorderBrush" Value="#7EB4EA" />
                        </Trigger>
                        <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
                            <Setter TargetName="border" Property="Border.BorderBrush" Value="#569DE5" />
                            <Setter TargetName="clearborder" Property="Border.BorderBrush" Value="#569DE5" />
                            <Setter TargetName="copyborder" Property="Border.BorderBrush" Value="#569DE5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FrameworkElement.FocusVisualStyle">
            <Setter.Value>
                <x:Null />
            </Setter.Value>
        </Setter>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="UIElement.AllowDrop" Value="True" />
    </Style>
    <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="local:ContentToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ContentToggleButton">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding OverContent}"
                                Focusable="False" RecognizesAccessKey="True" />
                            <Popup AllowsTransparency="True"
                                IsOpen="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"
                                Placement="{TemplateBinding PlacementMode}"
                                PlacementTarget="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"
                                PopupAnimation="Slide"
                                StaysOpen="{Binding StaysOpen, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}">
                                <ContentPresenter Content="{TemplateBinding Content}" />
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#F4F4F4" />
                            <Setter Property="Foreground" Value="#ADADAD" />
                            <Setter Property="TextElement.Foreground" Value="#838383" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
    </Style>
    <ControlTemplate x:Key="HorizontalNumericUpDown" TargetType="{x:Type ScrollBar}">
        <Grid SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="13" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="13" />
            </Grid.ColumnDefinitions>
            <TextBox Grid.Row="0" Grid.Column="1"
                VerticalContentAlignment="Center"
                Background="{TemplateBinding Background}"
                BorderThickness="1"
                IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource NumericUpDownTextBoxStyle}"
                Visibility="{Binding NumericUpdownTextBoxVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
            <RepeatButton x:Name="PART_LineUpButton"
                Grid.Row="0" Grid.Column="0"
                Command="{x:Static ScrollBar.LineLeftCommand}"
                Style="{StaticResource ScrollBarButton}"
                Visibility="{Binding NumericUpDownButtonsVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                <RepeatButton.Content>
                    <Path x:Name="Up"
                        Width="9.5" MinHeight="8.5"
                        Data="M0,0L5,5 10,0z" Fill="Black" RenderTransformOrigin="0.5,0.5"
                        Stretch="Fill" StrokeLineJoin="Round">
                        <Path.RenderTransform>
                            <RotateTransform Angle="90" />
                        </Path.RenderTransform>
                    </Path>
                </RepeatButton.Content>
            </RepeatButton>
            <RepeatButton x:Name="PART_LineDownButton"
                Grid.Row="1" Grid.Column="2"
                Command="{x:Static ScrollBar.LineRightCommand}"
                Style="{StaticResource ScrollBarButton}"
                Visibility="{Binding NumericUpDownButtonsVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                <RepeatButton.Content>
                    <Path x:Name="Down"
                        Width="9.5" MinHeight="8.5"
                        Data="M0,0L5,5 10,0z" Fill="Black" RenderTransformOrigin="0.5,0.5"
                        Stretch="Fill" StrokeLineJoin="Round">
                        <Path.RenderTransform>
                            <RotateTransform Angle="-90" />
                        </Path.RenderTransform>
                    </Path>
                </RepeatButton.Content>
            </RepeatButton>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Down" Property="Fill" Value="Gray" />
                <Setter TargetName="Down" Property="Stroke" Value="Gray" />
                <Setter TargetName="Up" Property="Fill" Value="Gray" />
                <Setter TargetName="Up" Property="Stroke" Value="Gray" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="VerticalNumericUpDown" TargetType="{x:Type ScrollBar}">
        <Grid SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="13" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <TextBox Grid.Row="0" Grid.RowSpan="2" Grid.Column="0"
                VerticalContentAlignment="Center"
                Background="{TemplateBinding Background}"
                BorderThickness="1"
                IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource NumericUpDownTextBoxStyle}"
                Visibility="{Binding NumericUpdownTextBoxVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
            <RepeatButton x:Name="PART_LineUpButton"
                Grid.Row="0" Grid.Column="1"
                MinHeight="7"
                Command="{x:Static ScrollBar.LineDownCommand}"
                Style="{StaticResource ScrollBarButton}"
                Visibility="{Binding NumericUpDownButtonsVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                <RepeatButton.Content>
                    <Path x:Name="Up"
                        Width="9.5" Height="7"
                        Data="M0,0L5,5 10,0z" Fill="Black" RenderTransformOrigin="0.5,0.5"
                        Stretch="Fill" StrokeLineJoin="Round">
                        <Path.RenderTransform>
                            <RotateTransform Angle="-180" />
                        </Path.RenderTransform>
                    </Path>
                </RepeatButton.Content>
            </RepeatButton>
            <RepeatButton x:Name="PART_LineDownButton"
                Grid.Row="1" Grid.Column="1"
                MinHeight="7"
                Command="{x:Static ScrollBar.LineUpCommand}"
                Style="{StaticResource ScrollBarButton}"
                Visibility="{Binding NumericUpDownButtonsVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                <RepeatButton.Content>
                    <Path x:Name="Down"
                        Width="9.5" Height="7"
                        Data="M0,0L5,5 10,0z" Fill="Black" RenderTransformOrigin="0.5,0.5"
                        Stretch="Fill" StrokeLineJoin="Round" />
                </RepeatButton.Content>
            </RepeatButton>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Down" Property="Fill" Value="Gray" />
                <Setter TargetName="Down" Property="Stroke" Value="Gray" />
                <Setter TargetName="Up" Property="Fill" Value="Gray" />
                <Setter TargetName="Up" Property="Stroke" Value="Gray" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="local:NumericUpDownControl">
        <Setter Property="Background" Value="White" />
        <Setter Property="ContextMenuService.IsEnabled" Value="False" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template" Value="{StaticResource HorizontalNumericUpDown}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource VerticalNumericUpDown}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="local:Resizer">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:Resizer">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0,0,1,1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="local:ResizablePanel">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush MappingMode="RelativeToBoundingBox" StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="1" Color="#FE00B6E8" />
                    <GradientStop Color="#FF48F3CA" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ResizablePanel">
                    <Grid Background="{TemplateBinding Background}" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="3" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="3" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="3" />
                        </Grid.RowDefinitions>
                        <local:Resizer Grid.Row="0" Grid.Column="0"
                            Width="2" Height="2"
                            Cursor="SizeNWSE" ThumbDirection="TopLeft" />
                        <local:Resizer Grid.Row="1" Grid.Column="0"
                            Width="2"
                            Cursor="SizeWE" ThumbDirection="Left" />
                        <local:Resizer Grid.Row="2" Grid.Column="0"
                            Width="2" Height="2"
                            Cursor="SizeNESW" ThumbDirection="BottomLeft" />
                        <local:Resizer Grid.Row="2" Grid.Column="1"
                            Height="2"
                            Cursor="SizeNS" ThumbDirection="Bottom" />
                        <local:Resizer Grid.Row="2" Grid.Column="2"
                            Width="2" Height="2"
                            Cursor="SizeNWSE" ThumbDirection="BottomRight" />
                        <local:Resizer Grid.Row="1" Grid.Column="2"
                            Width="2"
                            Cursor="SizeWE" ThumbDirection="Right" />
                        <local:Resizer Grid.Row="0" Grid.Column="2"
                            Width="2" Height="2"
                            Cursor="SizeNESW" ThumbDirection="TopRight" />
                        <local:Resizer Grid.Row="0" Grid.Column="1"
                            Height="2"
                            Cursor="SizeNS" ThumbDirection="Top" />
                        <ContentPresenter Grid.Row="1" Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            Content="{TemplateBinding Content}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>