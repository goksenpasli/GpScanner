<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:ice="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
    xmlns:local="clr-namespace:Extensions" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Extensions;component/Themes/Skin.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <DataTemplate x:Key="ColorItemTemplate">
        <Rectangle Width="16" Height="16" Fill="{Binding Name}">
            <Rectangle.ToolTip>
                <TextBlock Text="{Binding Name}" />
            </Rectangle.ToolTip>
        </Rectangle>
    </DataTemplate>
    <local:SystemFileIconConverter x:Key="SystemFileIconConverter" />
    <local:NullableToBooleanConverter x:Key="NullableToBooleanConverter" />
    <local:FilePathToIconConverter x:Key="FilePathToIconConverter" />
    <local:VisibilityToBooleanConverter x:Key="VisibilityToBooleanConverter" />
    <local:FilePathToFileDescriptionConverter x:Key="FilePathToFileDescriptionConverter" />
    <local:ContributionToColorConverter x:Key="ContributionToColorConverter" />
    <Style x:Key="NumericUpDownTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Text" Value="{Binding Value, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ShowMode, RelativeSource={RelativeSource TemplatedParent}}" Value="CurrencyMode">
                <Setter Property="Text" Value="{Binding Value, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, StringFormat=\{0:C\}, UpdateSourceTrigger=PropertyChanged}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ShowMode, RelativeSource={RelativeSource TemplatedParent}}" Value="DateTimeMode">
                <Setter Property="Text" Value="{Binding DateValue, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="local:GraphControl">
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Mode=Self}}" IsEnabled="{Binding IsContextMenuEnabled}" Visibility="{Binding ContextMenuVisibility}">
                    <MenuItem Header="Seri Rakamlarını Göster" IsCheckable="True" IsChecked="{Binding SeriesTextVisibility, Converter={StaticResource VisibilityToBooleanConverter}}" />
                    <MenuItem Header="Değer Rakamlarını Göster" IsCheckable="True" IsChecked="{Binding ValueTextVisibility, Converter={StaticResource VisibilityToBooleanConverter}}" />
                    <MenuItem IsCheckable="True" IsChecked="{Binding LineGraphVisibility, Converter={StaticResource VisibilityToBooleanConverter}}">
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock VerticalAlignment="Center" Text="Çizgi Grafik Göster" />
                                <local:NumericUpDownControl IsEnabled="{Binding LineGraphVisibility, Converter={StaticResource VisibilityToBooleanConverter}}"
                                    IsReadOnly="True" LargeChange="1"
                                    Maximum="30" Minimum="1"
                                    Orientation="Horizontal" SmallChange="1"
                                    Value="{Binding LineThickness}" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem Header="Çizgi Grafik Tepe Noktaları Göster" IsCheckable="True" IsChecked="{Binding LineDotVisibility, Converter={StaticResource VisibilityToBooleanConverter}}" />
                    <MenuItem Header="Grafik İçerik Göster" IsCheckable="True" IsChecked="{Binding GraphContentVisibility, Converter={StaticResource VisibilityToBooleanConverter}}" />
                    <MenuItem Command="{Binding Kaydet}" Header="Resim Olarak Kaydet">
                        <MenuItem.Icon>
                            <Image Width="16" Height="16">
                                <Image.Source>
                                    <MultiBinding Converter="{StaticResource SystemFileIconConverter}">
                                        <Binding Source="Shell32.dll" />
                                        <Binding Source="6" />
                                    </MultiBinding>
                                </Image.Source>
                            </Image>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="local:ColorPicker">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ColorPicker">
                    <Grid Background="{StaticResource BorderBackground}" IsEnabled="{TemplateBinding IsEnabled}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{Binding SelectorLength, RelativeSource={RelativeSource TemplatedParent}}" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="5*" />
                            <RowDefinition Height="2*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Rectangle Name="RgbGrid" Grid.Row="0" Grid.Column="0">
                            <Rectangle.Fill>
                                <LinearGradientBrush ice:Freeze="true" StartPoint="0.0,0" EndPoint="1,0">
                                    <GradientStop Color="Black" />
                                    <GradientStop Offset="1" Color="White" />
                                    <GradientStop Offset="0.5" Color="{Binding MiddleStopColor, RelativeSource={RelativeSource TemplatedParent}}" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle Name="SpectrumGrid"
                            Grid.Row="1" Grid.Column="0"
                            Fill="{Binding SpectrumGridBackground, RelativeSource={RelativeSource TemplatedParent}}"
                            Opacity="1" />
                        <local:ButtonedTextBox Grid.Row="2" Grid.Column="0"
                            IsReadOnly="True" OpenButtonVisibility="Collapsed"
                            PasteButtonVisibility="Collapsed" ResetButtonVisibility="Collapsed"
                            Text="{Binding HexCode, RelativeSource={RelativeSource TemplatedParent}}"
                            TextBlock.Foreground="{Binding HexCode, RelativeSource={RelativeSource TemplatedParent}}"
                            Visibility="{Binding HexCodeVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ListBox Grid.RowSpan="3" Grid.Column="1"
                            ItemTemplate="{StaticResource ColorItemTemplate}"
                            ItemsSource="{Binding ListBoxColors, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                            SelectedValue="{Binding HexCode, RelativeSource={RelativeSource TemplatedParent}}"
                            SelectedValuePath="Name"
                            Visibility="{Binding PredefinedColorVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Columns="{Binding ColorPickerColumnCount, RelativeSource={RelativeSource AncestorType=local:ColorPicker}}" />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="Padding" Value="0" />
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                        <Slider Grid.Row="3" Grid.ColumnSpan="2"
                            Maximum="255" Minimum="0"
                            Style="{StaticResource Slider}"
                            Visibility="{Binding SliderVisibility, RelativeSource={RelativeSource TemplatedParent}}"
                            Value="{Binding Alpha, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.56" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="local:ImageViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ImageViewer">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                            <Image RenderTransformOrigin="0.5,0.5" ScrollViewer.CanContentScroll="True"
                                Source="{Binding Source, RelativeSource={RelativeSource TemplatedParent}}"
                                Stretch="None">
                                <Image.LayoutTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="{Binding Zoom, RelativeSource={RelativeSource TemplatedParent}}" ScaleY="{Binding Zoom, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <RotateTransform Angle="{Binding Angle, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </TransformGroup>
                                </Image.LayoutTransform>
                            </Image>
                        </ScrollViewer>
                        <Viewport3D x:Name="PanoramaViewPort" Cursor="ScrollAll" Visibility="Collapsed">
                            <Viewport3D.Camera>
                                <PerspectiveCamera FieldOfView="{Binding Fov, RelativeSource={RelativeSource TemplatedParent}}"
                                    LookDirection="0,0,1" Position="0,0,0"
                                    UpDirection="0,1,0" />
                            </Viewport3D.Camera>
                            <ModelVisual3D>
                                <ModelVisual3D.Content>
                                    <Model3DGroup>
                                        <DirectionalLight Direction="0,0,1" Color="White" />
                                    </Model3DGroup>
                                </ModelVisual3D.Content>
                            </ModelVisual3D>
                            <ModelVisual3D>
                                <ModelVisual3D.Content>
                                    <GeometryModel3D Geometry="{Binding SphereModel, RelativeSource={RelativeSource TemplatedParent}}">
                                        <GeometryModel3D.BackMaterial>
                                            <DiffuseMaterial x:Name="panoramaBrush" />
                                        </GeometryModel3D.BackMaterial>
                                    </GeometryModel3D>
                                </ModelVisual3D.Content>
                                <ModelVisual3D.Transform>
                                    <Transform3DGroup>
                                        <ScaleTransform3D ScaleX="1" ScaleY="1.5" ScaleZ="1" />
                                        <RotateTransform3D>
                                            <RotateTransform3D.Rotation>
                                                <AxisAngleRotation3D Angle="{Binding RotateX, RelativeSource={RelativeSource TemplatedParent}}" Axis="0,1,0" />
                                            </RotateTransform3D.Rotation>
                                        </RotateTransform3D>
                                        <RotateTransform3D>
                                            <RotateTransform3D.Rotation>
                                                <AxisAngleRotation3D Angle="{Binding RotateY, RelativeSource={RelativeSource TemplatedParent}}" Axis="1,0,0" />
                                            </RotateTransform3D.Rotation>
                                        </RotateTransform3D>
                                    </Transform3DGroup>
                                </ModelVisual3D.Transform>
                            </ModelVisual3D>
                        </Viewport3D>
                        <ContentControl x:Name="Cnt" Grid.Row="1">
                            <Grid IsEnabled="{Binding ToolBarIsEnabled, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding ToolBarVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Button Grid.Column="0" Command="{Binding DosyaAç, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding OpenButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                                    <Button.Content>
                                        <Image Width="16" Height="16">
                                            <Image.Source>
                                                <MultiBinding Converter="{StaticResource SystemFileIconConverter}">
                                                    <Binding Source="Shell32.dll" />
                                                    <Binding Source="3" />
                                                </MultiBinding>
                                            </Image.Source>
                                        </Image>
                                    </Button.Content>
                                </Button>
                                <ListBox Grid.Column="1" SelectedValue="{Binding Orientation, RelativeSource={RelativeSource TemplatedParent}}" SelectedValuePath="Tag">
                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel Orientation="Horizontal" />
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>
                                    <ListBoxItem Tag="None">
                                        <TextBlock FontFamily="Webdings" FontSize="16"
                                            FontWeight="Bold" Text="1" />
                                    </ListBoxItem>
                                    <ListBoxItem Tag="Width">
                                        <TextBlock FontFamily="Wingdings 3" FontSize="16"
                                            FontWeight="Bold" Text="F" />
                                    </ListBoxItem>
                                    <ListBoxItem Tag="Height">
                                        <TextBlock FontFamily="Wingdings 3" FontSize="16"
                                            FontWeight="Bold" Text="G" />
                                    </ListBoxItem>
                                </ListBox>
                                <StackPanel Grid.Column="2" Orientation="Horizontal" Visibility="{Binding TifNavigasyonButtonEtkin, RelativeSource={RelativeSource TemplatedParent}}">
                                    <RepeatButton Command="{Binding ViewerBack, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="Önceki Sayfa">
                                        <Image Width="16" Height="16">
                                            <Image.Source>
                                                <MultiBinding Converter="{StaticResource SystemFileIconConverter}">
                                                    <Binding Source="Shell32.dll" />
                                                    <Binding Source="246" />
                                                </MultiBinding>
                                            </Image.Source>
                                        </Image>
                                    </RepeatButton>
                                    <ComboBox ItemsSource="{Binding Pages, RelativeSource={RelativeSource TemplatedParent}}" SelectedItem="{Binding Sayfa, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <ComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel />
                                            </ItemsPanelTemplate>
                                        </ComboBox.ItemsPanel>
                                    </ComboBox>
                                    <RepeatButton Command="{Binding ViewerNext, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="Sonraki Sayfa">
                                        <Image Width="16" Height="16">
                                            <Image.Source>
                                                <MultiBinding Converter="{StaticResource SystemFileIconConverter}">
                                                    <Binding Source="Shell32.dll" />
                                                    <Binding Source="247" />
                                                </MultiBinding>
                                            </Image.Source>
                                        </Image>
                                    </RepeatButton>
                                </StackPanel>
                                <Button Grid.Column="3" Command="{Binding Yazdır, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding PrintButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                                    <Button.Content>
                                        <Image Width="16" Height="16">
                                            <Image.Source>
                                                <MultiBinding Converter="{StaticResource SystemFileIconConverter}">
                                                    <Binding Source="Shell32.dll" />
                                                    <Binding Source="16" />
                                                </MultiBinding>
                                            </Image.Source>
                                        </Image>
                                    </Button.Content>
                                </Button>
                                <Slider Grid.Column="4"
                                    Margin="2"
                                    AutoToolTipPlacement="TopLeft"
                                    IsEnabled="{Binding Source, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullableToBooleanConverter}}"
                                    Minimum="0.01" SmallChange="1"
                                    Style="{StaticResource Slider}"
                                    Value="{Binding Zoom, RelativeSource={RelativeSource TemplatedParent}}" />
                                <Slider Grid.Column="5"
                                    Margin="2"
                                    AutoToolTipPlacement="TopLeft"
                                    IsEnabled="{Binding Source, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullableToBooleanConverter}}"
                                    IsSnapToTickEnabled="{Binding SnapTick, RelativeSource={RelativeSource TemplatedParent}}"
                                    Maximum="360" SmallChange="1"
                                    Style="{StaticResource Slider}"
                                    Ticks="0, 90, 180, 270, 360"
                                    Value="{Binding Angle, RelativeSource={RelativeSource TemplatedParent}}" />
                                <ToggleButton Grid.Column="6"
                                    Content="360°"
                                    IsChecked="{Binding PanoramaMode, RelativeSource={RelativeSource TemplatedParent}}"
                                    Visibility="{Binding PanoramaButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>
                        </ContentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="ToolBarVisibility" Value="Collapsed">
                            <Setter TargetName="Cnt" Property="Content" Value="{x:Null}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="local:MaskedTextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ScrollViewer x:Name="PART_ContentHost"
                                Focusable="False" HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden" />
                            <Border Grid.Column="1"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Visibility="{Binding ClearButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                                <TextBlock FontWeight="Bold">
                                    <Hyperlink Command="{Binding Reset, RelativeSource={RelativeSource TemplatedParent}}">
                                        <Run Text="X" />
                                    </Hyperlink>
                                </TextBlock>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF7EB4EA" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF569DE5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="local:SplitButton">
        <Setter Property="Border.BorderBrush" Value="#707070" />
        <Setter Property="Border.BorderThickness" Value="1" />
        <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
        <Setter Property="Control.Padding" Value="1" />
        <Setter Property="Control.VerticalContentAlignment" Value="Center" />
        <Setter Property="Panel.Background" Value="#DDDDDD" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="14" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="border"
                            Background="{TemplateBinding Panel.Background}"
                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                            BorderThickness="{TemplateBinding Border.BorderThickness}"
                            SnapsToDevicePixels="True">
                            <ContentPresenter Name="contentPresenter"
                                Margin="{TemplateBinding Control.Padding}"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                Content="{TemplateBinding ContentControl.Content}"
                                ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                Focusable="False" RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                        <ToggleButton x:Name="Tb"
                            Grid.Column="1"
                            Background="{TemplateBinding Panel.Background}"
                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                            IsChecked="{Binding RelativeSource={RelativeSource AncestorType=local:SplitButton}, Path=IsSplitPartOpen}"
                            IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=local:SplitButton}, Path=SplitContentPartIsEnabled}"
                            IsTabStop="{TemplateBinding IsTabStop}">
                            <Path x:Name="path"
                                HorizontalAlignment="Center" VerticalAlignment="Center"
                                Data="{StaticResource ArrowGeometry}"
                                Fill="#606060" Focusable="False">
                                <Path.Style>
                                    <Style TargetType="Path">
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Fill" Value="#BFBFBF" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Path.Style>
                            </Path>
                        </ToggleButton>
                        <Popup x:Name="PART_Popup"
                            Grid.ColumnSpan="2"
                            local:SplitButton.AlwaysOnTop="{Binding TopMost, RelativeSource={RelativeSource AncestorType={x:Type local:SplitButton}}}"
                            AllowsTransparency="True" Focusable="False"
                            HorizontalOffset="{Binding ContentHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type local:SplitButton}}}"
                            IsOpen="{Binding IsSplitPartOpen, RelativeSource={RelativeSource AncestorType={x:Type local:SplitButton}}}"
                            Placement="{Binding PlacementMode, RelativeSource={RelativeSource AncestorType={x:Type local:SplitButton}}}"
                            PlacementTarget="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:SplitButton}}}"
                            PopupAnimation="{Binding PopupAnimation, RelativeSource={RelativeSource AncestorType={x:Type local:SplitButton}}}"
                            StaysOpen="{Binding StayOpen, RelativeSource={RelativeSource AncestorType={x:Type local:SplitButton}}}"
                            VerticalOffset="{Binding ContentVerticalOffset, RelativeSource={RelativeSource AncestorType={x:Type local:SplitButton}}}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{Binding RelativeSource={RelativeSource AncestorType=local:SplitButton}, Path=InternalContent}" />
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="True">
                            <Setter TargetName="border" Property="Border.BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Border.BorderBrush" Value="#3C7FB1" />
                            <Setter TargetName="border" Property="Panel.Background" Value="#BEE6FD" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter TargetName="border" Property="Border.BorderBrush" Value="#2C628B" />
                            <Setter TargetName="border" Property="Panel.Background" Value="#C4E5F6" />
                        </Trigger>
                        <Trigger SourceName="Tb" Property="IsChecked" Value="True">
                            <Setter TargetName="PART_Popup" Property="IsOpen" Value="true" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="#838383" />
                            <Setter TargetName="border" Property="Border.BorderBrush" Value="#ADB2B5" />
                            <Setter TargetName="border" Property="Panel.Background" Value="#F4F4F4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="local:ContributionControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ContributionControl">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Grid.Column="0"
                            VerticalAlignment="Center"
                            FontSize="9"
                            Text="{Binding MonthTotalContribution, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ListBox Grid.Row="1" Grid.Column="0"
                            FontSize="9"
                            ItemsSource="{Binding Days, RelativeSource={RelativeSource TemplatedParent}}">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="Padding" Value="0" />
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Columns="1" Rows="7" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ListBox>
                        <ListBox Grid.Row="0" Grid.Column="1"
                            FontSize="9"
                            ItemsSource="{Binding Months, RelativeSource={RelativeSource TemplatedParent}}"
                            SelectedItem="{Binding SelectedMonth, RelativeSource={RelativeSource TemplatedParent}}">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="Padding" Value="0" />
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Columns="12" Rows="1" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ListBox>
                        <ListBox Grid.Row="1" Grid.Column="1"
                            d:ItemsSource="{d:SampleData ItemCount=10}"
                            ItemsSource="{Binding Contributions, RelativeSource={RelativeSource TemplatedParent}}"
                            ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Hidden"
                            SelectedItem="{Binding SelectedContribution, RelativeSource={RelativeSource TemplatedParent}}">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="Margin" Value="0" />
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Columns="{Binding ContributionColumnCount, RelativeSource={RelativeSource AncestorType=local:ContributionControl}}" Rows="{Binding ContributionRowCount, RelativeSource={RelativeSource AncestorType=local:ContributionControl}}">
                                        <UniformGrid.LayoutTransform>
                                            <TransformGroup>
                                                <RotateTransform Angle="90" />
                                                <ScaleTransform ScaleX="-1" />
                                            </TransformGroup>
                                        </UniformGrid.LayoutTransform>
                                    </UniformGrid>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Rectangle Width="10" Height="10"
                                        d:Fill="Green" d:Height="10"
                                        d:Width="10"
                                        Stroke="{Binding Stroke}">
                                        <Rectangle.Fill>
                                            <MultiBinding Converter="{StaticResource ContributionToColorConverter}">
                                                <Binding Path="Count" />
                                                <Binding Path="MaxContribution" RelativeSource="{RelativeSource AncestorType=local:ContributionControl}" />
                                                <Binding Path="ContributionColor" RelativeSource="{RelativeSource AncestorType=local:ContributionControl}" />
                                            </MultiBinding>
                                        </Rectangle.Fill>
                                        <Rectangle.ToolTip>
                                            <TextBlock>
                                                <Run Text="{Binding Count}" />
                                                <LineBreak />
                                                <Run Text="{Binding ContrubutionDate, StringFormat=\{0:d\}}" />
                                            </TextBlock>
                                        </Rectangle.ToolTip>
                                    </Rectangle>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="local:ArchiveViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ArchiveViewer">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ListView d:ItemsSource="{d:SampleData ItemCount=3}"
                            local:GridViewSort.AutoSort="True" AlternationCount="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Foreground="{TemplateBinding Foreground}"
                            IsSynchronizedWithCurrentItem="False"
                            ItemsSource="{Binding Arşivİçerik, RelativeSource={RelativeSource AncestorType=local:ArchiveViewer}}"
                            ScrollViewer.IsDeferredScrollingEnabled="False"
                            SelectedItem="{Binding SelectedFile, RelativeSource={RelativeSource AncestorType=local:ArchiveViewer}}"
                            SelectionMode="Single">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                                    <Border.InputBindings>
                                                        <MouseBinding Command="{Binding ArşivTekDosyaÇıkar, RelativeSource={RelativeSource AncestorType=local:ArchiveViewer}}" CommandParameter="{Binding TamYol}" MouseAction="LeftDoubleClick" />
                                                    </Border.InputBindings>
                                                    <GridViewRowPresenter Margin="0" HorizontalAlignment="Stretch"
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                        Content="{TemplateBinding Content}" />
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#D9EBF9" />
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="False">
                                                        <Setter Property="Background" Value="Transparent" />
                                                    </Trigger>
                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter Property="Background" Value="#CCE8FF" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Width="28">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <Image Width="16" Height="16" Source="{Binding DosyaAdı, Converter={StaticResource FilePathToIconConverter}}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="150" local:GridViewSort.PropertyName="DosyaAdı" DisplayMemberBinding="{Binding DosyaAdı, Mode=OneWay}">
                                        <GridViewColumn.Header>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock VerticalAlignment="Center" Text="DOSYA ADI" />
                                                <local:ButtonedTextBox Width="60"
                                                    CopyButtonVisibility="Collapsed" OpenButtonVisibility="Collapsed"
                                                    PasteButtonVisibility="Collapsed"
                                                    Text="{Binding Search, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=local:ArchiveViewer}}" />
                                            </StackPanel>
                                        </GridViewColumn.Header>
                                    </GridViewColumn>
                                    <GridViewColumn Width="80"
                                        local:GridViewSort.PropertyName="Boyut"
                                        DisplayMemberBinding="{Binding Boyut, Mode=OneWay}"
                                        Header="BOYUT" />
                                    <GridViewColumn Width="80"
                                        local:GridViewSort.PropertyName="SıkıştırılmışBoyut"
                                        DisplayMemberBinding="{Binding SıkıştırılmışBoyut, Mode=OneWay}"
                                        Header="SIKIŞTIRILMIŞ&#x0a;BOYUT" />
                                    <GridViewColumn Width="70"
                                        local:GridViewSort.PropertyName="DosyaAdı"
                                        DisplayMemberBinding="{Binding DosyaAdı, Converter={StaticResource FilePathToFileDescriptionConverter}, Mode=OneWay}"
                                        Header="TİP" />
                                    <GridViewColumn Width="45" local:GridViewSort.PropertyName="Oran" Header="ORAN">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <ProgressBar Width="32"
                                                    d:Value="0.5" Maximum="1"
                                                    Style="{Binding Mode=OneWay, Source={StaticResource ProgressBarStyle}}"
                                                    Value="{Binding Oran}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="65" local:GridViewSort.PropertyName="Crc" Header="CRC32">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock>
                                                    <Hyperlink Command="{Binding FileCrcGenerate, RelativeSource={RelativeSource AncestorType=local:ArchiveViewer}}" IsEnabled="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}">
                                                        <Run>
                                                            <Run.Style>
                                                                <Style TargetType="Run">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding CalculateCrc, RelativeSource={RelativeSource AncestorType=local:ArchiveViewer}}" Value="true">
                                                                            <Setter Property="Text" Value="{Binding Crc}" />
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding CalculateCrc, RelativeSource={RelativeSource AncestorType=local:ArchiveViewer}}" Value="false">
                                                                            <Setter Property="Text" Value="{Binding Crc, TargetNullValue='HESAPLA'}" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Run.Style>
                                                        </Run>
                                                    </Hyperlink>
                                                </TextBlock>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <Grid Grid.Column="1">
                            <ProgressBar Width="20"
                                d:Value="50"
                                Foreground="{StaticResource ProgressBarPinkForeground}"
                                Maximum="100" Orientation="Vertical"
                                Value="{Binding ToplamOran, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                d:Text="50" FontSize="11"
                                FontWeight="Bold"
                                Text="{Binding ToplamOran, RelativeSource={RelativeSource Mode=TemplatedParent}, StringFormat=\{0:F0\}}" />
                        </Grid>
                        <StatusBar Grid.Row="1" Grid.ColumnSpan="2">
                            <StatusBar.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                    </Grid>
                                </ItemsPanelTemplate>
                            </StatusBar.ItemsPanel>
                            <StatusBarItem Grid.Column="0">
                                <TextBlock Text="{Binding Path=SelectedFile.DosyaAdı, RelativeSource={RelativeSource AncestorType=local:ArchiveViewer}}" />
                            </StatusBarItem>
                            <StatusBarItem Grid.Column="1">
                                <TextBlock Text="{Binding Path=SelectedFile.DüzenlenmeZamanı, RelativeSource={RelativeSource AncestorType=local:ArchiveViewer}}" />
                            </StatusBarItem>
                            <StatusBarItem Grid.Column="2" HorizontalAlignment="Right">
                                <TextBlock Text="{Binding Path=Arşivİçerik.Count, RelativeSource={RelativeSource AncestorType=local:ArchiveViewer}, StringFormat=Toplam {0} Dosya}" />
                            </StatusBarItem>
                        </StatusBar>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="local:ButtonedTextBox">
        <Setter Property="Border.BorderBrush" Value="#ABADB3" />
        <Setter Property="Border.BorderThickness" Value="1" />
        <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.Resources>
                            <Style TargetType="Border">
                                <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter Property="BorderBrush" Value="{Binding BorderBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="SnapsToDevicePixels" Value="True" />
                            </Style>
                        </Grid.Resources>
                        <ContentPresenter Name="contentPresenter" VerticalAlignment="Center" Content="{Binding Description, RelativeSource={RelativeSource TemplatedParent}}" />
                        <Border Name="border" Grid.Column="1">
                            <ScrollViewer Name="PART_ContentHost"
                                Focusable="False" HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden" />
                        </Border>
                        <Border Name="remaintext" Grid.Column="2" Visibility="{Binding RemainingLengthVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                FontSize="12"
                                Text="{Binding RemainingTextLength, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <Border Name="copyborder"
                            Grid.Column="3"
                            Width="16"
                            Visibility="{Binding CopyButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14">
                                <Hyperlink Command="{Binding Copy, RelativeSource={RelativeSource TemplatedParent}}" TextDecorations="None">
                                    <Run FontFamily="Wingdings 2" FontWeight="Bold" Text="1" />
                                </Hyperlink>
                            </TextBlock>
                        </Border>
                        <Border Name="pasteborder"
                            Grid.Column="4"
                            Width="16"
                            Visibility="{Binding PasteButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14">
                                <Hyperlink Command="{Binding Paste, RelativeSource={RelativeSource TemplatedParent}}" TextDecorations="None">
                                    <Run FontFamily="Wingdings 2" FontWeight="Bold" Text="2" />
                                </Hyperlink>
                            </TextBlock>
                        </Border>
                        <Border Name="clearborder"
                            Grid.Column="5"
                            Width="16"
                            Visibility="{Binding ResetButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14">
                                <Hyperlink Command="{Binding Reset, RelativeSource={RelativeSource TemplatedParent}}" TextDecorations="None">
                                    <Run FontWeight="Bold" Text="X" />
                                </Hyperlink>
                            </TextBlock>
                        </Border>
                        <Border Name="openborder"
                            Grid.Column="6"
                            Width="16"
                            Visibility="{Binding OpenButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14">
                                <Hyperlink Command="{Binding Open, RelativeSource={RelativeSource TemplatedParent}}" TextDecorations="None">
                                    <Run FontFamily="Wingdings" FontSize="14"
                                        FontWeight="Bold" Text="8" />
                                </Hyperlink>
                            </TextBlock>
                        </Border>
                        <local:NumericUpDownControl x:Name="fontsize"
                            Grid.Column="7"
                            Background="{TemplateBinding Panel.Background}"
                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                            IsReadOnly="True" LargeChange="1"
                            Minimum="1" NumericUpdownTextBoxVisibility="Collapsed"
                            SmallChange="1" SnapsToDevicePixels="True"
                            Visibility="{Binding FontSizeButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}"
                            Value="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}}" />
                        <Border Name="title" Grid.Column="8" Visibility="{Binding TitleCaseMenuVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                            <Menu VerticalAlignment="Center" VerticalContentAlignment="Center"
                                Background="{x:Null}"
                                BorderBrush="{x:Null}"
                                IsMainMenu="False">
                                <MenuItem>
                                    <MenuItem Command="{Binding UpperCase, RelativeSource={RelativeSource TemplatedParent}}" Header="AAA BBB" />
                                    <MenuItem Command="{Binding TitleCase, RelativeSource={RelativeSource TemplatedParent}}" Header="Aaa Bbb" />
                                    <MenuItem Command="{Binding LowerCase, RelativeSource={RelativeSource TemplatedParent}}" Header="aaa bbb" />
                                    <MenuItem Command="{Binding UpperLowerCase, RelativeSource={RelativeSource TemplatedParent}}" Header="aAA bBB" />
                                    <MenuItem.Header>
                                        <Image Width="16" Height="16">
                                            <Image.Source>
                                                <MultiBinding Converter="{StaticResource SystemFileIconConverter}">
                                                    <Binding Source="Shell32.dll" />
                                                    <Binding Source="1" />
                                                </MultiBinding>
                                            </Image.Source>
                                        </Image>
                                    </MenuItem.Header>
                                </MenuItem>
                            </Menu>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="0.56" />
                            <Setter TargetName="clearborder" Property="UIElement.Opacity" Value="0.56" />
                            <Setter TargetName="copyborder" Property="UIElement.Opacity" Value="0.56" />
                            <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.56" />
                            <Setter TargetName="openborder" Property="UIElement.Opacity" Value="0.56" />
                            <Setter TargetName="pasteborder" Property="UIElement.Opacity" Value="0.56" />
                            <Setter TargetName="fontsize" Property="UIElement.Opacity" Value="0.56" />
                            <Setter TargetName="remaintext" Property="UIElement.Opacity" Value="0.56" />
                            <Setter TargetName="title" Property="UIElement.Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Border.BorderBrush" Value="#7EB4EA" />
                            <Setter TargetName="clearborder" Property="Border.BorderBrush" Value="#7EB4EA" />
                            <Setter TargetName="copyborder" Property="Border.BorderBrush" Value="#7EB4EA" />
                            <Setter TargetName="openborder" Property="Border.BorderBrush" Value="#7EB4EA" />
                            <Setter TargetName="pasteborder" Property="Border.BorderBrush" Value="#7EB4EA" />
                            <Setter TargetName="fontsize" Property="Border.BorderBrush" Value="#7EB4EA" />
                            <Setter TargetName="remaintext" Property="Border.BorderBrush" Value="#7EB4EA" />
                            <Setter TargetName="title" Property="Border.BorderBrush" Value="#7EB4EA" />
                        </Trigger>
                        <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
                            <Setter TargetName="border" Property="Border.BorderBrush" Value="#569DE5" />
                            <Setter TargetName="clearborder" Property="Border.BorderBrush" Value="#569DE5" />
                            <Setter TargetName="copyborder" Property="Border.BorderBrush" Value="#569DE5" />
                            <Setter TargetName="openborder" Property="Border.BorderBrush" Value="#569DE5" />
                            <Setter TargetName="pasteborder" Property="Border.BorderBrush" Value="#569DE5" />
                            <Setter TargetName="fontsize" Property="Border.BorderBrush" Value="#569DE5" />
                            <Setter TargetName="remaintext" Property="Border.BorderBrush" Value="#569DE5" />
                            <Setter TargetName="title" Property="Border.BorderBrush" Value="#569DE5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FrameworkElement.FocusVisualStyle">
            <Setter.Value>
                <x:Null />
            </Setter.Value>
        </Setter>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="UIElement.AllowDrop" Value="True" />
    </Style>
    <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="local:ContentToggleButton">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush ice:Freeze="true" StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Offset="0" Color="#F0F0F0" />
                        <GradientStop Offset="1" Color="#E5E5E5" />
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="1" />
        <Setter Property="BorderBrush" Value="#ACACAC" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ContentToggleButton">
                    <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Column="0"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                Focusable="False" RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Path x:Name="path"
                                Grid.Column="1"
                                Margin="2" HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{StaticResource ArrowGeometry}"
                                Fill="#606060" Focusable="False"
                                Visibility="{Binding ArrowVisibility, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" />
                            <Popup Grid.ColumnSpan="2"
                                local:ContentToggleButton.AlwaysOnTop="{Binding TopMost, RelativeSource={RelativeSource AncestorType={x:Type local:ContentToggleButton}}}"
                                AllowsTransparency="True"
                                HorizontalOffset="{Binding ContentHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"
                                IsOpen="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"
                                Placement="{Binding PlacementMode, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"
                                PlacementTarget="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"
                                PopupAnimation="{Binding PopupAnimation, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"
                                StaysOpen="{Binding StaysOpen, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"
                                VerticalOffset="{Binding ContentVerticalOffset, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}">
                                <ContentPresenter Content="{TemplateBinding OverContent}" />
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Border.BorderBrush" Value="#3C7FB1" />
                            <Setter TargetName="border" Property="Panel.Background" Value="#BEE6FD" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#F4F4F4" />
                            <Setter Property="Foreground" Value="#ADADAD" />
                            <Setter Property="TextElement.Foreground" Value="#838383" />
                            <Setter TargetName="path" Property="Fill" Value="#BFBFBF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
    </Style>
    <ControlTemplate x:Key="HorizontalNumericUpDown" TargetType="{x:Type ScrollBar}">
        <Grid SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="13" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="13" />
            </Grid.ColumnDefinitions>
            <RepeatButton x:Name="PART_LineUpButton"
                Grid.Row="0" Grid.Column="0"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                Command="{x:Static ScrollBar.LineLeftCommand}"
                Style="{StaticResource ScrollBarButton}"
                Visibility="{Binding NumericUpDownButtonsVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                <RepeatButton.Content>
                    <Viewbox>
                        <Path x:Name="Up"
                            Width="9.5" MinHeight="8.5"
                            Data="M0,0L5,5 10,0z"
                            Fill="{TemplateBinding Foreground}"
                            RenderTransformOrigin="0.5,0.5" Stretch="Fill"
                            StrokeLineJoin="Round">
                            <Path.RenderTransform>
                                <RotateTransform Angle="90" />
                            </Path.RenderTransform>
                        </Path>
                    </Viewbox>
                </RepeatButton.Content>
            </RepeatButton>
            <TextBox Grid.Row="0" Grid.Column="1"
                HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="1"
                Foreground="{TemplateBinding Foreground}"
                IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource NumericUpDownTextBoxStyle}"
                Visibility="{Binding NumericUpdownTextBoxVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
            <RepeatButton x:Name="PART_LineDownButton"
                Grid.Row="1" Grid.Column="2"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                Command="{x:Static ScrollBar.LineRightCommand}"
                Style="{StaticResource ScrollBarButton}"
                Visibility="{Binding NumericUpDownButtonsVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                <RepeatButton.Content>
                    <Viewbox>
                        <Path x:Name="Down"
                            Width="9.5" MinHeight="8.5"
                            Data="M0,0L5,5 10,0z"
                            Fill="{TemplateBinding Foreground}"
                            RenderTransformOrigin="0.5,0.5" Stretch="Fill"
                            StrokeLineJoin="Round">
                            <Path.RenderTransform>
                                <RotateTransform Angle="-90" />
                            </Path.RenderTransform>
                        </Path>
                    </Viewbox>
                </RepeatButton.Content>
            </RepeatButton>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Down" Property="Fill" Value="Gray" />
                <Setter TargetName="Down" Property="Stroke" Value="Gray" />
                <Setter TargetName="Up" Property="Fill" Value="Gray" />
                <Setter TargetName="Up" Property="Stroke" Value="Gray" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="VerticalNumericUpDown" TargetType="{x:Type ScrollBar}">
        <Grid SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="13" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <RepeatButton x:Name="PART_LineUpButton"
                Grid.Row="0" Grid.Column="1"
                MinHeight="7"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                Command="{x:Static ScrollBar.LineDownCommand}"
                Style="{StaticResource ScrollBarButton}"
                Visibility="{Binding NumericUpDownButtonsVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                <RepeatButton.Content>
                    <Viewbox>
                        <Path x:Name="Up"
                            Width="9.5" Height="7"
                            Data="M0,0L5,5 10,0z"
                            Fill="{TemplateBinding Foreground}"
                            RenderTransformOrigin="0.5,0.5" Stretch="Fill"
                            StrokeLineJoin="Round">
                            <Path.RenderTransform>
                                <RotateTransform Angle="-180" />
                            </Path.RenderTransform>
                        </Path>
                    </Viewbox>
                </RepeatButton.Content>
            </RepeatButton>
            <TextBox Grid.Row="0" Grid.RowSpan="2"
                Grid.Column="0"
                VerticalContentAlignment="Center"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="1"
                Foreground="{TemplateBinding Foreground}"
                IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource NumericUpDownTextBoxStyle}"
                Visibility="{Binding NumericUpdownTextBoxVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
            <RepeatButton x:Name="PART_LineDownButton"
                Grid.Row="1" Grid.Column="1"
                MinHeight="7"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                Command="{x:Static ScrollBar.LineUpCommand}"
                Style="{StaticResource ScrollBarButton}"
                Visibility="{Binding NumericUpDownButtonsVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                <RepeatButton.Content>
                    <Viewbox>
                        <Path x:Name="Down"
                            Width="9.5" Height="7"
                            Data="M0,0L5,5 10,0z"
                            Fill="{TemplateBinding Foreground}"
                            RenderTransformOrigin="0.5,0.5" Stretch="Fill"
                            StrokeLineJoin="Round" />
                    </Viewbox>
                </RepeatButton.Content>
            </RepeatButton>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Down" Property="Fill" Value="Gray" />
                <Setter TargetName="Down" Property="Stroke" Value="Gray" />
                <Setter TargetName="Up" Property="Fill" Value="Gray" />
                <Setter TargetName="Up" Property="Stroke" Value="Gray" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="local:NumericUpDownControl">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="ContextMenuService.IsEnabled" Value="False" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template" Value="{StaticResource HorizontalNumericUpDown}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource VerticalNumericUpDown}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="local:Resizer">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:Resizer">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,1,1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="local:ResizablePanel">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush MappingMode="RelativeToBoundingBox" StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="1" Color="#FE00B6E8" />
                    <GradientStop Color="#FF48F3CA" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ResizablePanel">
                    <Grid Background="{TemplateBinding Background}" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="3" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="3" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="3" />
                        </Grid.RowDefinitions>
                        <local:Resizer Grid.Row="0" Grid.Column="0"
                            Width="2" Height="2"
                            Cursor="SizeNWSE" ThumbDirection="TopLeft" />
                        <local:Resizer Grid.Row="1" Grid.Column="0"
                            Width="2"
                            Cursor="SizeWE" ThumbDirection="Left" />
                        <local:Resizer Grid.Row="2" Grid.Column="0"
                            Width="2" Height="2"
                            Cursor="SizeNESW" ThumbDirection="BottomLeft" />
                        <local:Resizer Grid.Row="2" Grid.Column="1"
                            Height="2"
                            Cursor="SizeNS" ThumbDirection="Bottom" />
                        <local:Resizer Grid.Row="2" Grid.Column="2"
                            Width="2" Height="2"
                            Cursor="SizeNWSE" ThumbDirection="BottomRight" />
                        <local:Resizer Grid.Row="1" Grid.Column="2"
                            Width="2"
                            Cursor="SizeWE" ThumbDirection="Right" />
                        <local:Resizer Grid.Row="0" Grid.Column="2"
                            Width="2" Height="2"
                            Cursor="SizeNESW" ThumbDirection="TopRight" />
                        <local:Resizer Grid.Row="0" Grid.Column="1"
                            Height="2"
                            Cursor="SizeNS" ThumbDirection="Top" />
                        <ContentPresenter Grid.Row="1" Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            Content="{TemplateBinding Content}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="local:FadedToolTipControl">
        <Setter Property="Background" Value="Red" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:FadedToolTipControl">
                    <Popup x:Name="PART_Popup"
                        local:FadedToolTipControl.AlwaysOnTop="False" AllowsTransparency="True"
                        Placement="{TemplateBinding Position}"
                        PlacementTarget="{TemplateBinding PopupParent}"
                        PopupAnimation="{TemplateBinding PopupAnimation}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <ContentPresenter Content="{Binding TooltipContent, RelativeSource={RelativeSource TemplatedParent}}" />
                                <ToggleButton HorizontalAlignment="Right" VerticalAlignment="Top"
                                    Content="X" Foreground="Red"
                                    IsChecked="{Binding Show, RelativeSource={RelativeSource TemplatedParent}}"
                                    Visibility="{Binding ShowCloseButton, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>
                        </Border>
                    </Popup>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>