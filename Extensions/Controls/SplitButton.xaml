<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:Extensions">
    <Style TargetType="local:SplitButton">
        <Setter Property="Border.BorderBrush" Value="#707070" />
        <Setter Property="Border.BorderThickness" Value="1" />
        <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
        <Setter Property="Control.Padding" Value="1" />
        <Setter Property="Control.VerticalContentAlignment" Value="Center" />
        <Setter Property="Panel.Background" Value="#DDDDDD" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="14" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="border"
                            Background="{TemplateBinding Panel.Background}"
                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                            BorderThickness="{TemplateBinding Border.BorderThickness}"
                            SnapsToDevicePixels="True">
                            <ContentPresenter Name="contentPresenter"
                                Margin="{TemplateBinding Control.Padding}"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                Content="{TemplateBinding ContentControl.Content}"
                                ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                Focusable="False" RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                        <ToggleButton x:Name="Tb"
                            Grid.Column="1"
                            Background="{TemplateBinding Panel.Background}"
                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                            IsChecked="{Binding RelativeSource={RelativeSource AncestorType=local:SplitButton}, Path=IsSplitPartOpen}"
                            IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=local:SplitButton}, Path=SplitContentPartIsEnabled}"
                            IsTabStop="{TemplateBinding IsTabStop}">
                            <Path x:Name="path"
                                HorizontalAlignment="Center" VerticalAlignment="Center"
                                Data="{DynamicResource ArrowGeometry}"
                                Fill="#606060" Focusable="False">
                                <Path.Style>
                                    <Style TargetType="Path">
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Fill" Value="#BFBFBF" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Path.Style>
                            </Path>
                        </ToggleButton>
                        <Popup x:Name="PART_Popup"
                            Grid.ColumnSpan="2"
                            local:SplitButton.AlwaysOnTop="{Binding TopMost, RelativeSource={RelativeSource AncestorType={x:Type local:SplitButton}}}"
                            AllowsTransparency="True" Focusable="False"
                            HorizontalOffset="{Binding ContentHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type local:SplitButton}}}"
                            IsOpen="{Binding IsSplitPartOpen, RelativeSource={RelativeSource AncestorType={x:Type local:SplitButton}}}"
                            Placement="{Binding PlacementMode, RelativeSource={RelativeSource AncestorType={x:Type local:SplitButton}}}"
                            PlacementTarget="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:SplitButton}}}"
                            PopupAnimation="{Binding PopupAnimation, RelativeSource={RelativeSource AncestorType={x:Type local:SplitButton}}}"
                            StaysOpen="{Binding StayOpen, RelativeSource={RelativeSource AncestorType={x:Type local:SplitButton}}}"
                            VerticalOffset="{Binding ContentVerticalOffset, RelativeSource={RelativeSource AncestorType={x:Type local:SplitButton}}}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{Binding RelativeSource={RelativeSource AncestorType=local:SplitButton}, Path=InternalContent}" />
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="True">
                            <Setter TargetName="border" Property="Border.BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Border.BorderBrush" Value="#3C7FB1" />
                            <Setter TargetName="border" Property="Panel.Background" Value="#BEE6FD" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter TargetName="border" Property="Border.BorderBrush" Value="#2C628B" />
                            <Setter TargetName="border" Property="Panel.Background" Value="#C4E5F6" />
                        </Trigger>
                        <Trigger SourceName="Tb" Property="IsChecked" Value="True">
                            <Setter TargetName="PART_Popup" Property="IsOpen" Value="true" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="#838383" />
                            <Setter TargetName="border" Property="Border.BorderBrush" Value="#ADB2B5" />
                            <Setter TargetName="border" Property="Panel.Background" Value="#F4F4F4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>